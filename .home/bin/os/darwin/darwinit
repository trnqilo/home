#!/usr/bin/env bash
set -e

if [[ "$1" == 'lock' ]]; then shift; lock=true;
elif [[ "$1" == 'unlock' ]]; then shift; lock=false; fi
if [[ "$1" == 'hide' ]]; then shift; hide=true;
elif [[ "$1" == 'unhide' ]]; then shift; hide=false; fi
if [[ "$hide" != false ]]; then hide=true; fi
if [[ "$lock" != false ]]; then lock=true; fi

function _init_ {
  _init_dock
  _init_finder
  _init_trackpad
  _init_keyboard
  _init_desktop
}

function _init_dock {
  write_default com.apple.Dock position-immutable -bool $lock
  write_default com.apple.Dock size-immutable -bool $lock
  write_default com.apple.Dock contents-immutable -bool $lock
  write_default com.apple.Dock showhidden -bool true
  write_default com.apple.Dock autohide -bool $hide
  write_default com.apple.Dock scroll-to-open -bool true
  write_default com.apple.Dock slow-motion-allowed -bool true
  write_default com.apple.dock mineffect -string scale
  write_default com.apple.dock show-recents -bool false
  write_default com.apple.dock launchanim -bool false

  # write_default com.apple.dock autohide-delay -float 0
  # write_default com.apple.dock autohide-time-modifier -float 0
  # write_default com.apple.dock expose-animation-duration -float 0.1
}

function _init_finder {
  write_default com.apple.Finder AppleShowAllFiles true
  write_default com.apple.Finder _FXShowPosixPathInTitle -bool true
  write_default com.apple.Finder QuitMenuItem -bool true
  write_default com.apple.finder FXDefaultSearchScope -string SCcf
  write_default com.apple.finder FXEnableExtensionChangeWarning -bool true
  write_default com.apple.finder CreateDesktop -bool true
}

function _init_trackpad {
  # write_default NSGlobalDomain com.apple.mouse.linear -bool true
  # write_default NSGlobalDomain com.apple.mouse.scaling -float 1
  write_default com.apple.AppleMultitouchTrackpad ActuateDetents -bool false
  write_default com.apple.AppleMultitouchTrackpad Clicking -bool true
  write_default com.apple.AppleMultitouchTrackpad DragLock -bool false
  write_default com.apple.AppleMultitouchTrackpad Dragging -bool false
  write_default com.apple.AppleMultitouchTrackpad FirstClickThreshold -int 0
  write_default com.apple.AppleMultitouchTrackpad ForceSuppressed -bool true
  write_default com.apple.AppleMultitouchTrackpad SecondClickThreshold -int 0
  write_default com.apple.AppleMultitouchTrackpad TrackpadCornerSecondaryClick -bool false
  write_default com.apple.AppleMultitouchTrackpad TrackpadFiveFingerPinchGesture -int 0
  write_default com.apple.AppleMultitouchTrackpad TrackpadFourFingerHorizSwipeGesture -int 2
  write_default com.apple.AppleMultitouchTrackpad TrackpadFourFingerPinchGesture -int 0
  write_default com.apple.AppleMultitouchTrackpad TrackpadFourFingerVertSwipeGesture -int 2
  write_default com.apple.AppleMultitouchTrackpad TrackpadHandResting -bool true
  write_default com.apple.AppleMultitouchTrackpad TrackpadHorizScroll -bool true
  write_default com.apple.AppleMultitouchTrackpad TrackpadMomentumScroll -bool true
  write_default com.apple.AppleMultitouchTrackpad TrackpadPinch -bool true
  write_default com.apple.AppleMultitouchTrackpad TrackpadRightClick -bool true
  write_default com.apple.AppleMultitouchTrackpad TrackpadRotate -bool false
  write_default com.apple.AppleMultitouchTrackpad TrackpadScroll -bool true
  write_default com.apple.AppleMultitouchTrackpad TrackpadThreeFingerDrag -bool true
  write_default com.apple.AppleMultitouchTrackpad TrackpadThreeFingerHorizSwipeGesture -bool false
  write_default com.apple.AppleMultitouchTrackpad TrackpadThreeFingerTapGesture -bool false
  write_default com.apple.AppleMultitouchTrackpad TrackpadThreeFingerVertSwipeGesture -bool false
  write_default com.apple.AppleMultitouchTrackpad TrackpadTwoFingerDoubleTapGesture -int 0
  write_default com.apple.AppleMultitouchTrackpad TrackpadTwoFingerFromRightEdgeSwipeGesture -int 0
  write_default com.apple.AppleMultitouchTrackpad USBMouseStopsTrackpad -bool false
  write_default com.apple.AppleMultitouchTrackpad UserPreferences -bool true

  write_default com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
  write_default com.apple.driver.AppleBluetoothMultitouch.trackpad DragLock -bool false
  write_default com.apple.driver.AppleBluetoothMultitouch.trackpad Dragging -bool false
  write_default com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadCornerSecondaryClick -bool false
  write_default com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadFiveFingerPinchGesture -int 0
  write_default com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadFourFingerHorizSwipeGesture -int 2
  write_default com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadFourFingerPinchGesture -int 0
  write_default com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadFourFingerVertSwipeGesture -int 2
  write_default com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadHandResting -bool true
  write_default com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadHorizScroll -bool true
  write_default com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadMomentumScroll -bool true
  write_default com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadPinch -bool true
  write_default com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadRightClick -bool true
  write_default com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadRotate -bool false
  write_default com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadScroll -bool true
  write_default com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadThreeFingerDrag -bool true
  write_default com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadThreeFingerHorizSwipeGesture -int 0
  write_default com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadThreeFingerTapGesture -int 0
  write_default com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadThreeFingerVertSwipeGesture -int 0
  write_default com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadTwoFingerDoubleTapGesture -int 0
  write_default com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadTwoFingerFromRightEdgeSwipeGesture -int 0
  write_default com.apple.driver.AppleBluetoothMultitouch.trackpad USBMouseStopsTrackpad -bool false
  write_default com.apple.driver.AppleBluetoothMultitouch.trackpad UserPreferences -bool true
  write_default -g com.apple.swipescrolldirection -bool false
  # write_default -g com.apple.trackpad.scaling -float 2.5
}

function _init_keyboard {
  write_default NSGlobalDomain AppleKeyboardUIMode -int 2 # kb nav
  write_default com.apple.HIToolbox AppleFnUsageType -int 0
  write_default com.apple.HIToolbox AppleEnabledInputSources -array
  write_default NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false
  write_default NSGlobalDomain NSAutomaticCapitalizationEnabled -bool false
  write_default NSGlobalDomain NSAutomaticPeriodSubstitutionEnabled -bool false
  write_default NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false
  write_default com.apple.keyboard.textinput.inlinePredictive -bool false
  write_default -g ApplePressAndHoldEnabled -bool false
  # write_default -g InitialKeyRepeat -int 25 # -bool false
}

function _init_desktop { should_logout=true
  # write_default com.apple.universalaccess reduceMotion -bool ${motion:-false}
  # write_default com.apple.universalaccess reduceTransparency -bool true
  # write_default com.apple.universalaccess increaseContrast -bool false
  # write_default com.apple.universalaccess invertDisplay -bool false
  write_default com.apple.VoiceOver4/default SCREnable -bool false

  write_default com.apple.WindowManager HideDesktop -int 1
  # write_default com.apple.WindowManager AutoHide -int 1
  write_default NSGlobalDomain NSQuitAlwaysKeepsWindow -bool false
  write_default NSGlobalDomain NSCloseAlwaysConfirmsChanges -bool false
  # write_default com.apple.Safari ShowFullURLInSmartSearchField -bool true
  # write_default com.apple.Spotlight orderedItems ...
  write_default com.apple.menuextra.clock DateFormat -string '"EEE d MMM HH:mm:ss"'
  write_default NSGlobalDomain _HIHideMenuBar -bool $hide
  write_default NSGlobalDomain AppleMenuBarVisibleInFullscreen -bool `flip $hide`
  write_default NSGlobalDomain NSWindowResizeTime -float 0.001

  # sudo nvram StartupMute=%01
  # sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true
  bash -c "osascript -e 'tell application \"System Events\" to tell appearance preferences to set dark mode to true'" > /dev/null 2>&1 &
}

function _init_terminal {
  plist=~/Library/Preferences/com.apple.Terminal.plist
  plistbuddy=/usr/libexec/PlistBuddy
  plutil -convert xml1 "$plist"
  default_profile=$($plistbuddy -c "Print 'Default Window Settings'" "$plist")
  profile_path=":'Window Settings':$default_profile:'Keyboard Map'"
  declare -A keybinds=( # ["keyCode-modifierCode"]="controlCharHex"
    ['8-1048576']='0x03'   # ⌘C → ^C
    ['2-1048576']='0x04'   # ⌘D → ^D
    ['6-1048576']='0x1A'   # ⌘Z → ^Z
    ['42-1048576']='0x1C'  # ⌘\ → ^\
    ['15-1048576']='0x12'  # ⌘R → ^R
    ['37-1048576']='0x0C'  # ⌘L → ^L
    ['1-1048576']='0x13'   # ⌘S → ^S
    ['40-1048576']='0x0B'  # ⌘K → ^K
    ['16-1048576']='0x19'  # ⌘Y → ^Y
    ['32-1048576']='0x15'  # ⌘U → ^U
    ['13-1048576']='0x17'  # ⌘W → ^W
    ['0-1048576']='0x01'   # ⌘A → ^A
    ['14-1048576']='0x05'  # ⌘E → ^E
  )
  for key in "${!keybinds[@]}"; do
    value=${keybinds[$key]}
    echo "Adding binding: $key → $value"
    $plistbuddy -c "Add $profile_path:$key dict" "$plist" 2>/dev/null
    $plistbuddy -c "Set $profile_path:$key:Action SendText" "$plist"
    $plistbuddy -c "Set $profile_path:$key:Text $value" "$plist"
  done
}

function reset_hotkeys { rm -vf "$HOME/Library/Preferences/com.apple.symbolichotkeys.plist"; } # ide fix

function write_default { echo "$@"; defaults write "$@"; }

function flip { [[ "$1" == true ]] && echo false || echo true; }

_init_$@
killall Finder Dock SystemUIServer
# [[ "$should_logout" ]] && surely log out && launchctl bootout user/`id -u $USER` ||:
